{"ast":null,"code":"var _jsxFileName = \"/home/chenna/Documents/Todos Application/todos-application/src/Components/Todo/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport TaskItem from \"../TaskItem\";\nimport TabBar from \"../TabBar\";\nimport { AppContainer, MainHeading, CreateTaskContainer, CreateTaskHeading, Span, TodoUserInput, Button, TasksList } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [task, setTask] = useState(\"\");\n  const [tasksList, setTasksList] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"All\");\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasksList\"));\n    if (storedTasks) {\n      setTasksList(storedTasks);\n    }\n  }, []);\n  const saveItemToLocalStorage = tasksList => {\n    localStorage.setItem(\"tasksList\", JSON.stringify(tasksList));\n  };\n  const handleOnClickSave = () => {\n    saveItemToLocalStorage(tasksList);\n  };\n  const onChangeTask = event => {\n    setTask(event.target.value);\n  };\n  const onClickAddTask = () => {\n    if (task === \"\") {\n      alert(\"Please enter a valid task\");\n      return;\n    }\n    const newTask = {\n      id: uuidv4(),\n      task,\n      completed: false\n    };\n    setTasksList([...tasksList, newTask]);\n    setTask(\"\");\n  };\n  const deleteTask = taskId => {\n    const filteredTasks = tasksList.filter(eachTask => {\n      return eachTask.id !== taskId;\n    });\n    setTasksList(filteredTasks);\n  };\n  const toggleTaskCompletion = taskId => {\n    const updatedTasksList = tasksList.map(eachTask => {\n      if (eachTask.id === taskId) {\n        return {\n          ...eachTask,\n          completed: !eachTask.completed\n        };\n      }\n      return eachTask;\n    });\n    setTasksList(updatedTasksList);\n  };\n  const renderTodoList = () => {\n    let filteredTasks = tasksList;\n    if (activeTab === \"active\") {\n      filteredTasks = tasksList.filter(eachTask => !eachTask.completed);\n    } else if (activeTab === \"completed\") {\n      filteredTasks = tasksList.filter(eachTask => eachTask.completed);\n    }\n    return /*#__PURE__*/_jsxDEV(TasksList, {\n      children: filteredTasks.map(eachTask => /*#__PURE__*/_jsxDEV(TaskItem, {\n        taskDetails: eachTask,\n        deleteTask: deleteTask,\n        toggleTaskCompletion: toggleTaskCompletion\n      }, eachTask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(AppContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeading, {\n      children: \"Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateTaskContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CreateTaskHeading, {\n        children: [\"Create \", /*#__PURE__*/_jsxDEV(Span, {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoUserInput, {\n        type: \"text\",\n        placeholder: \"What needs to be done?\",\n        value: task,\n        onChange: onChangeTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: onClickAddTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabBar, {\n        activeTab: activeTab,\n        changeActiveTab: setActiveTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), renderTodoList(), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleOnClickSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"IJdSyLpadu14oNqaBifgJ3+t890=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useEffect","v4","uuidv4","TaskItem","TabBar","AppContainer","MainHeading","CreateTaskContainer","CreateTaskHeading","Span","TodoUserInput","Button","TasksList","jsxDEV","_jsxDEV","Todo","_s","task","setTask","tasksList","setTasksList","activeTab","setActiveTab","isButtonDisabled","setIsButtonDisabled","storedTasks","JSON","parse","localStorage","getItem","saveItemToLocalStorage","setItem","stringify","handleOnClickSave","onChangeTask","event","target","value","onClickAddTask","alert","newTask","id","completed","deleteTask","taskId","filteredTasks","filter","eachTask","toggleTaskCompletion","updatedTasksList","map","renderTodoList","children","taskDetails","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","changeActiveTab","_c","$RefreshReg$"],"sources":["/home/chenna/Documents/Todos Application/todos-application/src/Components/Todo/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport TaskItem from \"../TaskItem\";\n\nimport TabBar from \"../TabBar\";\n\nimport {\n  AppContainer,\n  MainHeading,\n  CreateTaskContainer,\n  CreateTaskHeading,\n  Span,\n  TodoUserInput,\n  Button,\n  TasksList,\n} from \"./styledComponents\";\n\nconst Todo = () => {\n  const [task, setTask] = useState(\"\");\n  const [tasksList, setTasksList] = useState([]);\n  const [activeTab, setActiveTab] = useState(\"All\");\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasksList\"));\n    if (storedTasks) {\n      setTasksList(storedTasks);\n    }\n  }, []);\n\n  const saveItemToLocalStorage = (tasksList) => {\n    localStorage.setItem(\"tasksList\", JSON.stringify(tasksList));\n  };\n\n  const handleOnClickSave = () => {\n    saveItemToLocalStorage(tasksList);\n  };\n\n  const onChangeTask = (event) => {\n    setTask(event.target.value);\n  };\n\n  const onClickAddTask = () => {\n    if (task === \"\") {\n      alert(\"Please enter a valid task\");\n      return;\n    }\n    const newTask = {\n      id: uuidv4(),\n      task,\n      completed: false,\n    };\n    setTasksList([...tasksList, newTask]);\n    setTask(\"\");\n  };\n\n  const deleteTask = (taskId) => {\n    const filteredTasks = tasksList.filter((eachTask) => {\n      return eachTask.id !== taskId;\n    });\n    setTasksList(filteredTasks);\n  };\n\n  const toggleTaskCompletion = (taskId) => {\n    const updatedTasksList = tasksList.map((eachTask) => {\n      if (eachTask.id === taskId) {\n        return {\n          ...eachTask,\n          completed: !eachTask.completed,\n        };\n      }\n      return eachTask;\n    });\n    setTasksList(updatedTasksList);\n  };\n\n  const renderTodoList = () => {\n    let filteredTasks = tasksList;\n\n    if (activeTab === \"active\") {\n      filteredTasks = tasksList.filter((eachTask) => !eachTask.completed);\n    } else if (activeTab === \"completed\") {\n      filteredTasks = tasksList.filter((eachTask) => eachTask.completed);\n    }\n    return (\n      <TasksList>\n        {filteredTasks.map((eachTask) => (\n          <TaskItem\n            taskDetails={eachTask}\n            key={eachTask.id}\n            deleteTask={deleteTask}\n            toggleTaskCompletion={toggleTaskCompletion}\n          />\n        ))}\n      </TasksList>\n    );\n  };\n\n  return (\n    <AppContainer>\n      <MainHeading>Todo</MainHeading>\n      <CreateTaskContainer>\n        <CreateTaskHeading>\n          Create <Span>Task</Span>\n        </CreateTaskHeading>\n        <TodoUserInput\n          type=\"text\"\n          placeholder=\"What needs to be done?\"\n          value={task}\n          onChange={onChangeTask}\n        />\n        <Button type=\"submit\" onClick={onClickAddTask}>\n          Add\n        </Button>\n        <TabBar activeTab={activeTab} changeActiveTab={setActiveTab} />\n        {renderTodoList()}\n        <Button onClick={handleOnClickSave}>Save</Button>\n      </CreateTaskContainer>\n    </AppContainer>\n  );\n};\n\nexport default Todo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}